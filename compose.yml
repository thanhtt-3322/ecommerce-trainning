services:
  app:
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    image: ttt141121/e-commerce-app:1.0
    container_name: ecommerce_app
    tty: true
    stdin_open: true
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "3000:3000"
    command: bash -c "rm -f tmp/pids/server.pid && rails db:prepare && bundle install && yarn install && rails server -b 0.0.0.0"
    volumes:
      # - .:/app
      - gem_cache:/usr/local/bundle/gems
    environment:
      NODE_OPTIONS: "--openssl-legacy-provider"
      DATABASE_NAME: EcommerceDB
      DATABASE_USER: root
      DATABASE_PASSWORD: 12345678
      DATABASE_HOST: database
      DATABASE_PORT: 3306
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - ecommerce-network

  database:
    image: mysql:8.0
    container_name: ecommerce_db
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: 12345678
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "33061:3306"
    networks:
      - ecommerce-network

  redis:
    image: redis:7.2
    container_name: ecommerce_redis
    command: redis-server
    ports:
      - 6379
    volumes:
      - redis_data:/data
    networks:
      - ecommerce-network

  sidekiq:
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    image: ttt141121/e-commerce-app:1.0
    container_name: ecommerce_sidekiq
    command: bash -c "bundle exec sidekiq"
    stdin_open: true
    tty: true
    volumes:
      # - .:/app
    depends_on:
      - database
      - redis
    networks:
      - ecommerce-network

volumes:
  gem_cache:
  db_data:
  redis_data:

networks:
  ecommerce-network: